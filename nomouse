/* **************************************************
 Ctrl + z 把vim放到背景, fg 叫回來
 ************************************************** */

/* **************************************************
 更精確的移動游標
 ************************************************** */
w/W, 往前進一個字
b/B, 往回退一個字
{, 移到上一個段落
}, 移到下一個段落
[x]G,跳到指定行
gg
G
0, 移到行首
$, 移到行尾
gk, 往上一行
gj, 往下一行

:set hlsearch
/, 搜尋
n, 搜尋下一個
N, 搜尋上一個
*, 搜尋目前游標的這個字
:set nohlsearch
f[x], 往後搜尋同一行最近的x
F[x], 往前搜尋同一行最近的x
zz, 讓某一行停在畫面中間
zt, 讓某一行停在上方
zb, 讓某一行停在下方
v, visual模式
V, visual模式 並選取一整行
y, =yank=複製
yy, 複製一整行
p, =paste=貼上
P, 往前貼上
[x]yy, 複製x行
y$, 從游標複製到行尾
yG, 從游標複製到最底
u, undo回上一步
Ctrl + r, redo下一步
"ay, 存到a暫存器
"ap, 貼上a暫存器的內容
:set clipboard=unnamed, 外部複製的內容，到vim也可以用
i, insert模式
I, insert模式
a, insert模式
A, insert模式 
o, insert模式 
O, insert模式 
x, 刪除游標的字元, 也可以選取再x,內容會放到暫存器
d, 選取之後再d,可以刪除,內容會放到暫存器
D, 游標之後的那行都刪掉,內容會放到暫存器
dd, 刪除游標位置整行
[x]dd, 刪除x行
c, 跟d的功能一樣但會進入insert模式
C, 游標之後的那行都刪掉並進入insert模式
r, 更換游標位置的字元
>>, 縮排
>, 對選取的做縮排
:set shiftwidth=2
[x]>>, 縮排x行
=, 排版

/* **************************************************
 編輯多個檔案
 ************************************************** */
:e FILENAME (在vim裡開啟檔案)
:tabe 頁籤
:tabe FILENAME
gt, gT 切換頁籤
:new 開啟一個水平視窗
Ctrl + w w 切換視窗
Ctrl + w j 往下
Ctrl + w k 往上
:vnew 開啟垂直視窗
Ctrl + w l 往右
Ctrl + w h 往左
vim -o hello.rb index.html (開啟多個檔案)
vim -O (垂直)
vim * 開啟目錄下所有檔案
vim -p * 用頁籤的方式開啟

Buffer=資料保存
Window=展示資料
Tab=排版佈局 

vim file1 file2 file3 (假設開啟3個檔案)
在裡面輸入 :ls (可以看到開啟了哪些檔案)
:b3 (切換到第3個檔案)
%a (目前位置)
# (之前的位置)
Ctrl + ^ (回到前一個)
:b FILENAME (切換到檔案名稱)
:bn = :bnext (切換到下一個)
:bp = :bprevious
:bl = :blast
:bf = :bfirst
:bd = :bdelete (關掉buffer)

/* **************************************************
 Visual Line and Visual Block
 ************************************************** */
 V (大寫V切換到Line模式一次選一整行)
 Ctrl + v 切換到Visual Block模式(例如在整排最前面+字)
vw (選取一個字)
viw (選取一個字游標不用在開頭，但游標會在字內)
vaw (選取一個字游標不用在開頭，但游標會在字外)
"release of Letraset"
vi" (快速選取雙引號裡的字)
va" (外面的雙引號也選取)
<title>Document abcdefg 1234579 goole</title>
vit (選取tag裡面的所有東西)
vat (選取tag裡面的所有東西,到tag外)

	def smile
	  puts ":)"
	end

v} (選取一個段落)
v{

diw (前面換d 刪除字)
ciw (刪除字，進去insert模式)

/* **************************************************
 Vim Text Object, 名詞 動詞 範圍 量詞
 ************************************************** */
名詞
w=word, s=sentence, p=paragraph, t=tag
', ", (), [], {}
動詞
y=yank, p=paste, d=delete, c=change
範圍
i=inner, a= a or around

vis (選取一段句子)
cis (刪除一段句子)
vip (選取一個段落)
dip (刪除整個段落)
yip (複製整個段落)

/* **************************************************
 其他實用小技巧
 ************************************************** */
         test halo world
^ (跳到行頭, 0是跳到最前, ^是字)
Ctrl + f (下一頁)
Ctrl + b (上一頁)
zf (隱藏起來)
zd (解開)
l (也可以, 空白鍵也行)
zfip (這一個段落,隱藏起來)
~ (選起來的字,大小寫互換)
. (紀錄一個連續動作,ex:I,#,空白,離開)
J (把底下那行, 提上來並成一行)
Ctrl + w (進入insert模式, 刪除一整個字)終端也可以
Ctrl + u (進入insert模式, 刪除前面一個行字)終端也可以
:![指令] (在vim裡執行終端的指令,ex:  :! ls -al)
:r![指令] (把指令的內容複製一份貼在所在地)
vimtutor (安裝vim就有的,教學模式)
vimtutor zh_tw (中文版)

/* **************************************************
 vimrc 設定檔案
 ************************************************** */
set number (行號)
:source ~/.vimrc (讀取home目錄底下的vimrc)
"set number (vim註解用 " )
set clipboard=unnamed (用yank複製起來的內容就會貼到剪貼板)
set hlsearch
set cursorline (游標更明顯)
.swp (編輯的過程中暫時把內容存在這)
git 的時候這些.swp檔案要丟到ignore裡去,假設你用cat指令去看,裡面還是有部分資訊
set noswapfile

set softtabstop=2 (tab鍵=2個空白,預設是8個空白)
set shiftwidth=2 (按下>,或<,縮排移動2格)
set expandtab (讓你可以準備把tab轉換成空白,在做:retab指令)
:retab (tab軟化成空白) 
set showtabline=2 (開啟一個檔案也會有頁籤出現)
set splitbelow (:new 開啟一個水平視窗,但會開在底下)
set splitright (:vnew 開啟一個垂直視窗,但開在右邊)
set ignorecase (無視大小寫,比如搜尋的時候)
set incsearch (漸進式搜尋)
:syntax enable (語法高亮)
:syntax on (語法高亮)
:colorscheme (default,darkblue

filetype on (偵測這個檔案是用什麼語言)
filetype indent on (用那個程式的慣用縮排)
filetype plugin on


/* **************************************************
 map指令
 ************************************************** */
map/nmap/vmap/imap
:imap a b (按a會顯示b)
:h key-notation (查詢按鍵的名稱)

用ctrl+c代替yank
:vmap <C-c> y (vmap代表圈選起來,大寫C = Ctrl,小寫c = c)

用ctrl+v代替p
:namp <C-v> p

用tab來縮排
:nmap <Tab> >>
:vmap <Tab> >>
:vmap <S-Tab> <

有寫人用jj設定成離開編輯模式
:imap jj <Esc>

查看map設定
:map

取消某些map設定
:unmap
:vunmap (在視覺模式map,取消設定)
:mapclear (清除所有的設定)

上下左右關閉
:nmap <UP> <Nop>
:imap <UP> <Nop>

無窮迴圈map會出現recursive mapping
:map a b
:map b c
:map c a

:noremap a b (防止無窮迴圈)
:inoremap a b
:inoremap b c
:inoremap c a

leader key \ (加入前綴讓你可以使用它,預設值的leader key = \ )
:nmap <leader>i >> (讓你擴充key,按下 \ i,就會變縮排)
:let mapleader = "," (leader key 變成 , )

:set (會顯示你客製化過的設定檔)
:set all (顯示所有設定)

:colorscheme (按下空白, 再按tab, 可以顯示有哪些可以選擇)
:colorscheme ctrl+d (顯示列表)

vim 也有 try catch 機制
----------------------
try
  colorscheme darkblu
catch
  colorscheme shine
endtry
----------------------

:set ruler (可以看到游標在第幾個字)
:set wrap (預設是打開的,折行 基本上還是同一行)
:set linebreak (折行以一個word為單位)

:set noshowmode (顯示模式 關閉)
:set showcmd (顯示敲出的指令)

:set scrolloff=3 (游標距離3行的時候畫面開始捲動)

:set smartcase (搜尋的字有大小寫)
-----
Ipsum
ipSum
-----

:set list (顯示看不到的字元, tab, 換行符號)








